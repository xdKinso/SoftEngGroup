#!/usr/bin/env pwsh
$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent '#$basedir variable is then set to the directory of the script 

$exe=""
if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
  # Fix case when both the Windows and Linux builds of Node
  # are installed in the same directory
  $exe=".exe" #The $exe variable is set to an empty string.
}
$ret=0
if (Test-Path "$basedir/node$exe") {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) { #if statement checks if the current version of PowerShell is less than 6.0 
    $input | & "$basedir/node$exe"  "$basedir/../@babel/parser/bin/babel-parser.js" $args
  } else {
    & "$basedir/node$exe"  "$basedir/../@babel/parser/bin/babel-parser.js" $args
  }
  $ret=$LASTEXITCODE
} else {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "node$exe"  "$basedir/../@babel/parser/bin/babel-parser.js" $args
  } else {
    & "node$exe"  "$basedir/../@babel/parser/bin/babel-parser.js" $args #If node.exe doesn't exist in the $basedir directory, then the script falls back to using the node command
  }
  $ret=$LASTEXITCODE
}
exit $ret
